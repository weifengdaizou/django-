# Generated by Django 4.2.9 on 2024-01-21 12:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Userinfo",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                ("telephone", models.CharField(max_length=11, null=True, unique=True)),
                (
                    "avatar",
                    models.FileField(
                        default="/avatar/default.png", upload_to="avatar/"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=50, verbose_name="文章标题")),
                ("desc", models.CharField(max_length=255, verbose_name="文章摘要")),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                ("content", models.TextField()),
                ("comment_count", models.IntegerField(default=0)),
                ("up_count", models.IntegerField(default=0)),
                ("down_count", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Bole",
            fields=[
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=64, verbose_name="博客标题")),
                ("site_name", models.CharField(max_length=64, verbose_name="站点名称")),
                ("theme", models.CharField(max_length=64, verbose_name="博客主题")),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=32)),
                (
                    "bolg",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app01.bole"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                ("content", models.CharField(max_length=255)),
                ("create_tiem", models.DateTimeField(auto_now_add=True)),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app01.article"
                    ),
                ),
                (
                    "parent_comment",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app01.comment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=32)),
                (
                    "bolg",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app01.bole"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Article2Tag",
            fields=[
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app01.article"
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app01.tag"
                    ),
                ),
            ],
            options={
                "unique_together": {("article", "tag")},
            },
        ),
        migrations.AddField(
            model_name="article",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app01.category",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="tag",
            field=models.ManyToManyField(through="app01.Article2Tag", to="app01.tag"),
        ),
        migrations.AddField(
            model_name="article",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userinfo",
            name="bolg",
            field=models.OneToOneField(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="app01.bole"
            ),
        ),
        migrations.AddField(
            model_name="userinfo",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="userinfo",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.CreateModel(
            name="ArticleUpDown",
            fields=[
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                ("is_up", models.BooleanField(default=True)),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app01.article"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("article", "user")},
            },
        ),
    ]
